
/// https://github.com/TrashRobotics/CVbot/blob/main/python_app/app.py
1)Десктоп (Страница 1):
1.0) Прием/передача по радиоканалу (SSH)
1.1) Поиск устройства к которому можно подключиться
1.2) Список кешированных устройств
1)Десктоп (Страница 2):
1.3) Загрузка новой карты
1.4) Список кешированных карт
1)Десктоп (Страница 3):
1.5) Построение пути по двум точкам на карте
1.6) Добавление опорных ракурсов
1.7) Вывод списка маршрутных точек
1.8) Вывод списка опорных ракурсов
1.9) Вывод телеметрии
1.10) Получение данных об изменениях в карте 

2)   Удалённая платформа
2.0) Прием/передача по радиоканалу (SSH)
2.0.1) Неблокирующая обработка принятых команд
2.1) Привязка к GPS координатам в начале марштура/по ориентиру/ перенос платформы ручками в наччальную точку
2.2) Съёмка одной или двумя камерами
2.3) Акселлерометрия.
2.4) Движение по заданному маршруту 
2.5) Сравнение ткущего кадра с опорным ракурсом
2.6) Генерация управляющих комманд(чем управлем???)
2.7) Динамическая корректировка движения для минимизации отклонения положения платформы от заложенного пути
2.8) Построение пути на основе численного интегрирования акселлерометрии и SLAM алгоритма

3)   Flask и удалённое управление:
3.1) Вывод видео с камеры в HTML странице(index.html).
3.2) Ввод настроек камеры со стороны HTML страницы.
3.3) Вывод инерциальных данных в HTML странице(index.html).
3.4) Ввод настроек инерциальной системы со стороны HTML страницы.
3.5) Продумать возможность вывода 2-мерного графика пройденного пути,
     построенного на основе измерений инерциальной системы.
---  Далее по ситуации. 
3.6) Переключение между ручным и автономным режимом
3.7) Отображение джойстика в ручном режиме (https://github.com/TrashRobotics/CVbot/blob/main/python_app/templates/index.html, https://github.com/TrashRobotics/CVbot/blob/main/python_app/static/joy.js)
3.8) Реализация джойстика 
3.9) В выкладке одометрия вывод трёх графиков:
     * инерциальная одометрия
     * визуальная одометрия
     * одометрия построенная на основе анализа результатов двух предыдущих
     * вывод кривой огибающей наблюдаемые препятствия
     * вывод технической карты(в качестве фона)
